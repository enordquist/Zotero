Software News and Updates
CHARMM-GUI: A Web-Based Graphical User Interface for CHARMM
SUNHWAN JO,1 TAEHOON KIM,2 VIDYASHANKARA G. IYER,1 WONPIL IM2 1Department of Chemistry, The University of Kansas, 2030 Becker Drive, Lawrence, Kansas 66047
2Department of Molecular Biosciences and Center for Bioinformatics, The University of Kansas, 2030 Becker Drive, Lawrence, Kansas 66047
Received 2 November 2007; Revised 17 December 2007; Accepted 14 January 2008 DOI 10.1002/jcc.20945
Published online 19 March 2008 in Wiley InterScience (www.interscience.wiley.com).

Abstract: CHARMM is an academic research program used widely for macromolecular mechanics and dynamics with versatile analysis and manipulation tools of atomic coordinates and dynamics trajectories. CHARMM-GUI, http://www.charmm-gui.org, has been developed to provide a web-based graphical user interface to generate various input ﬁles and molecular systems to facilitate and standardize the usage of common and advanced simulation techniques in CHARMM. The web environment provides an ideal platform to build and validate a molecular model system in an interactive fashion such that, if a problem is found through visual inspection, one can go back to the previous setup and regenerate the whole system again. In this article, we describe the currently available functional modules of CHARMM-GUI Input Generator that form a basis for the advanced simulation techniques. Future directions of the CHARMM-GUI development project are also discussed brieﬂy together with other features in the CHARMM-GUI website, such as Archive and Movie Gallery.
q 2008 Wiley Periodicals, Inc. J Comput Chem 29: 1859–1865, 2008

Key words: molecular dynamics; Poisson-Boltzmann; electrostatic potential; membrane; visualization; explicit solvent; implicit solvent; MarvinSpace

Introduction
Molecular dynamics (MD) simulations of biologically important macromolecules have provided deeper insights into their dynamics and functions as well as interactions with the surrounding environments at the atomic level.1–6 Observations during MD simulations not only depict how molecules interact with each other, but also explain the microscopic origins or driving forces of biological functions, especially when the simulations are combined with computationally sophisticated free energy calculations. Over the last three decades, considerable efforts have been made to generalize and enhance the computational methodologies and techniques for modeling and simulating macromolecules of biological interest.1–6 As a result, various simulation packages7–13 have been developed and evolved to make common and advanced simulation techniques user-friendly. However, it is still challenging for nonexpert users, especially experimental scientists, to use a simulation package or related modeling tools for studying biomolecules of their own interest. Furthermore, most researchers even in the ﬁeld of computational biology are often facing considerable difﬁculties to setup and perform complex calculations such as free energy, transition path, and quantum mechanics/molecular mechanics (QM/MM) calculations.

We have developed the CHARMM-GUI website (http:// www.charmm-gui.org) to facilitate and standardize the usage of common and advanced simulation techniques in the biomolecular simulation program CHARMM7 (Chemistry at HARvard Macromolecular Mechanics; http://www.charmm.org). CHARMM is an academic research program used widely for macromolecular mechanics and dynamics with the potential energy functions for proteins,14,15 nucleic acids,16,17 lipids,18,19 and carbohydrates. In addition, CHARMM can be used for various chemical and conformational free energy calculations with many types of restraints. It also provides versatile analysis and manipulation tools of atomic coordinates and dynamics trajectories. By taking advantages of web environments, CHARMM-GUI has been developed to provide a graphical user interface (GUI) to generate various input ﬁles and molecular systems for CHARMM in an interactive fashion. A novel online visualization tool based on MarvinSpace molecular visualization software,20 a Java app-
This article contains supplementary material available via the Internet at http://www.interscience.wiley.com/jpages/0192-8651/suppmat.
Correspondence to: W. Im; e-mail: wonpil@ku.edu
Contract/grant sponsor: University of Kansas

q 2008 Wiley Periodicals, Inc.

1860

Jo et al. • Vol. 29, No. 11 • Journal of Computational Chemistry

let integrated within CHARMM-GUI, allows one to interactively inspect the generated molecular system at each and every step, such that, if a problem is found, users can go back to the previous setup and regenerate the whole system again before quitting the web browser. In this way, one can generate CHARMM inputs and molecular systems for biomolecular simulations and modeling with generally accepted standards and well-qualiﬁed methods.
The rest of the article is organized as follows. In the next section, we describe the functional modules in CHARMM-GUI Input Generator with a few illustrations (see also Figs. S1–S21 in Supporting Information), and web browser tests as well as current limitations. Future directions of the CHARMM-GUI development project are then discussed brieﬂy together with other features in the website, such as Archive and Movie Gallery.
CHARMM-GUI Input Generator
The main objective of the CHARMM-GUI development project is to provide optimal, reasonable CHARMM input ﬁles in a GUI fashion such that users can download and run the inputs on their local machine. The automatic input generation can avoid various trivial mistakes in the input and thus control the quality of calculations with generally accepted standards and well-qualiﬁed methods. Such input generation is expected to help users read and modify the input for their own research purposes. Therefore, the Input Generator is the core of CHARMM-GUI. The modus operandi is to generate inputs and molecular systems based on adjustable parameters with appropriate guides and then to make the generated ﬁles downloadable. At each and every step of input generation, users can interactively visualize the generated structures on the web browser using the integrated online visualization tool based on MarvinSpace.20 One of the most signiﬁcant advantages of using the web environment is that, if a problem is found, users can simply go back to the previous web page and regenerate the whole system again by adjusting parameters until successful. For example, if the generated system appears to be bigger or smaller than expected after visual inspection, one can go back to previous steps to adjust the system size. During each step of input generation, short calculations are performed on the CHARMM-GUI main sever to examine if generated inputs and systems are properly functional. If abnormal termination occurs due to residue mismatch, memory allocation problem, etc, CHARMM-GUI displays warning and stops the procedure. As shown in Figure 1, there are currently six modules available, which form a basis for the future development of Input Generator for more advanced simulation techniques.
PDB Reader
Reading a PDB (Protein Data Bank)21 ﬁle into a simulation program is not straightforward and generally considered the ﬁrst difﬁculty that one may face. It is typically even harder to introduce different protonation states of titratable residues, disulﬁde bonds, or other post-translational modiﬁcations such as phosphorylation. PDB Reader provides a ﬂexible web interface to convert a PDB ﬁle (downloaded from RCSB,21 http://www.rcsb.org,

or uploaded from user’s computer) into CHARMM readable ﬁles with the following options: (1) partial selection of protein chains as well as model selection in the case of NMR structures, (2) modiﬁcation of engineered residues, (3) terminal group selection, (4) protonation selection, (5) disulﬁde bond selection, (6) phosphorylation selection, (7) generation of a biological functional unit, and (8) generation of a crystal packing. The terminal patch residues available in PDB Reader are listed in Table S1 of the Supporting Information. If indicated in a PDB ﬁle, PDB Reader automatically detects the disulﬁde bonds and displays them. Users can always add or remove them in the list. PDB Reader also automatically detects some of the engineered residues listed in Table S2 of the Supporting Information, and converts them to corresponding natural residues. For example, an engineered residue ‘‘Sep’’ in a PDB ﬁle represents a phosphorylated Ser residue. In such case, PDB Reader automatically converts Sep to Ser and turn on phosphorylation of the Ser residue. However, due to the complexity of PDB ﬁles with various heteroatoms and other engineered residues, it is users that need to check if all the residues to be read do exist in a CHARMM topology ﬁle (currently, top_all27_prot_na.rtf). If there are undetermined coordinates in selected chains, PDB Reader simply builds them using a predetermined internal coordinate table (‘‘IC BUILD’’ command in CHARMM). As shown in Figure 2, one can visualize the generated PDB ﬁles once the CHARMM PDB reading is complete. Note that the generation of a biological functional unit or crystal packing requires appropriate transformation matrix information or crystal parameters in the header of the PDB ﬁle. Although PDB Reader exists as an independent module, as shown in Figure 1, it is the basic module that all other modules start with. There is a video demo, ‘‘PDB Reader Demo’’, available at the CHARMM-GUI website to illustrate how to use PDB Reader.

Solvator

It is common practice to simulate proteins, DNA, and RNA in a realistic environment, typically aqueous solvent. The Solvator module helps users to (1) solvate their molecule or (2) generate a water box only for other purposes. Users are guided in determining the dimension of the solvated system with orthorhombic, hexagonal, truncated octahedral (octagonal), or spherical shapes of water box. A default value of 10 A˚ , which can be adjusted by users, is used for the distance between edges of a biomolecule and those of a solvation box. Unless all the dimensions are explicitly speciﬁed by users, Solvator generates a cubic water box with the longest axis.
One can add a few types of ions into the solvated system by specifying ions (NaCl, KCl, and CaCl2) and concentration (C). The default ion concentration is 0.15 M KCl that is close to the physiological ion concentration. The numbers of ions (N1 and N2) are automatically determined by the ion-accessible volume (V) and the total charge of the system (Qsys) as follows:

Nþ ¼ C Á V À Qsys=ð2e Á zþÞ

(1)

NÀ ¼ zþC Á V þ Qsys=2e

where z1 is the valence of the positive ion. Note that eq. (1) imposes constraints on the electroneutrality of the entire system,

Journal of Computational Chemistry DOI 10.1002/jcc

CHARMM-GUI: A Web-Based Graphical User Interface for CHARMM

1861

Figure 1. Schematic view of module dependence in CHARMM Input Generator. Table S2 in Supporting Information brieﬂy describes the modules that will be available in the future.
i.e., z1 3 N1 2 N2 5 –Qsys, and the resulting number of ions roughly correspond to those deduced from the linearized Poisson-Boltzmann (PB) theory.22 The ion-accessible volume, V, is estimated by subtracting molecular volume from the total system volume. In the case that the number of an ion type becomes negative due to highly charged biomolecular systems such as DNA or RNA, Solvator displays a warning and asks users to increase the concentration. Therefore, eq. (1) allows one to not only include ions corresponding to certain concentration in the simulations but also ensure the electroneutrality of the entire molecular system for the Ewald method.23 The initial conﬁguration of ions is then determined through short Monte Carlo (MC) simulations (2000 steps) using a primitive model, i.e., van der Waals and scaled Coulombic (e 5 80) interactions. By simply changing a variable (nmc) in the input (step2.2_ions.inp), one can perform longer MC simulations on their local machine.
One can visualize the solvated system on the web to validate if the molecule is solvated properly. It should be noted that the

solvated system is neither minimized nor equilibrated, and thus may contain some bad contacts with water molecules. One may obtain a slightly minimized solvated system in step 3 of Quick MD Simulator (see next section). Although a spherical system is not directly used for common MD simulations, it is frequently used in biomolecular simulations with solvent boundary potential in which a small region of interest is simulated fully explicitly while representing the inﬂuence of the surrounding solvent/ protein atoms with an effective boundary potential, mostly based on implicit solvent approaches.24–27
Quick MD Simulator
Starting from PDB Reader (step 1) and then using Solvator (step 2), this module generates subsequent inputs for standard MD (equilibration and production) simulations of biomolecules in aqueous solvent environments. All the simulations are performed under periodic boundary conditions (PBC) and with the ParticleMesh Ewald (PME) method28 for long-range electrostatic interactions whose grid parameters for fast Fourier transforms (FFTs) are determined either automatically or by users’ input (step 3). While NVT (constant volume and temperature) is used for equilibration (step 4), users can specify either NVT or NPT (constant pressure and temperature) dynamics for production runs (step 5). Figures S1–S9 in the Supporting Information provide some stepby-step instructions for Quick MD Simulator.
There are some important parameters that users need to know or want to modify for their own purpose. The van der Waals interactions are smoothly switched off at 10–12 A˚ by a forceswitching function (vfswitch). To remove the artifact associated with truncation of electrostatic forces, as mentioned earlier, electrostatic interactions are calculated using the PME method with an appropriate grid for FFTs, j 5 0.34 A˚ 21, and a sixth-order Bspline interpolation.28 The automatic generation of FFT grid parameter assures at least 1 grid point per Angstrom. Note that a relative large cutoff (cutnb 5 16 A˚ ) is used to get a better balance between calculations of nonbonded list and its update frequency. This value is rather empirical and good for large systems. However, users may want to perform a short dynamics with different

Figure 2. Molecular graphics views of PDB:1K4C (potassium channel KcsA-Fab complex) in (left) biological functional unit and (right) crystal packing, generated by PDB Reader. The PDB:1K4C ﬁle contains only asymmetric unit shown in green, orange, and white in left. Users can do various renderings on the web using the MarvinSpace tools.20
Journal of Computational Chemistry DOI 10.1002/jcc

1862

Jo et al. • Vol. 29, No. 11 • Journal of Computational Chemistry

cutoff values. If it is too small, there are too frequent list updates, and if too large, there can be memory problems or a long list calculation. After setup of PBC and PME, the initial solvated system is minimized with 50 steps of mixed Steepest Descent (SD) and Adopted Basis Newton-Raphson (ABNR) minimization (step3_pbcsetup.inp). For equilibration and production runs, the integration time step is set to 2 femtosecond (fs) and all the bond lengths involving hydrogen atoms were ﬁxed using the SHAKE algorithm.29 Users may want to change number of MD steps (nstep), printout frequency (nprint), and the trajectory saving frequency (nsavc) for post-processing of simulation runs. Although there are other methods in CHARMM, CHARMM-GUI uses Nose-Hoover method30,31 for NVT dynamics and Langevin-piston algorithm32 for NPT dynamics.
Membrane Builder
Simulating a realistic protein/membrane complex is more challenging than simulations of biomolecules in aqueous solvent. Membrane Builder33 helps users to build such a complex system through the web interface. An automated building process includes system size determination as well as generation of a lipid bilayer, pore water, bulk water, and ions. As a result, a realistic membrane system with virtually any kinds and shapes of membrane proteins can be generated in 5 min to 2 h, depending on the system size. Figure 3 shows the overall building process that is well described in ref. 33. In each and every step, users can visualize the system to check if the system size is reasonable.
RCSB PDB structures do not contain orientation information of a membrane(-bound) protein relative to lipid bilayers. Therefore, to build a reasonable protein/membrane complex, users need to validate if the protein structure is properly oriented with respect to membranes. It is assumed that the membrane normal is parallel to the Z-axis and its center is located at Z 5 0. Users can (1) preorient the structure in their local machine and upload it, (2) use the tools that Membrane Builder provides to orient the molecule, or (3) use preoriented protein structures from the OPM database (http://opm.phar.umich.edu)34 by selecting OPM as PDB download source.
Currently, Membrane Builder supports three different types of lipid molecules (DMPC, DPPC, and POPC) and two types of system shapes (rectangular and hexagonal) in the XY plane. Lipid bilayers can be generated in one of the two ways: the socalled replacement method35,36 and the insertion method.37–39 The insertion method uses a pre-equilibrated lipid bilayer with a hole of an appropriate size into which a protein is inserted. This method is particularly useful for a protein with cylindrical and symmetrical shape. The replacement method uses a packing of lipid-like pseudo atoms, and replaces them by lipid molecules one at a time by randomly selecting a lipid molecule from a lipid molecule library. Therefore, it generates a nicely packed lipid membrane around the protein. The structural libraries of lipid molecules and bilayers that are used in Membrane Builder are available in Archive at the CHARMM-GUI website. There are ‘‘Membrane Builder Lecture’’ and ‘‘Membrane Builder Demo’’ videos available to illustrate how to use this module. Figures S10–S21 in the Supporting Information also provide some step-by-step instructions for Membrane Builder.

PBEQ Solver
The characterization of the electrostatic potential on the macromolecular surface by solving the PB equation is becoming a routine practice in structural biology.40 PBEQ Solver (S. Jo; M. Vargyas; B. Roux, submitted) calculates (1) electrostatic potential and solvation free energy of biomolecules, (2) protein–protein (DNA or RNA) electrostatic interaction energy, and (3) pKa of a selected titratable residue in proteins. All the calculations can be performed in both aqueous solvent and membrane environments (with a cylindrical pore in the case of membrane), which is well described in ref. 40. PBEQ Solver uses the PBEQ module41–44 in CHARMM to solve the ﬁnite-difference PB equation of molecules speciﬁed by users through PDB Reader. Note that a PDB ﬁle must contain at least two chains for the electrostatic interaction calculations, such that the interaction energy is calculated between a selected chain and the rest. This module offers a novel web-based visualization tool for the calculated electrostatic potential on the molecular surface, as shown in Figure 4. It should be noted that all the calculations are performed with coarse grid spacing (1.5 A˚ before and 1 A˚ after focusing45) to reduce the computational time in CHARMM-GUI. However, it is recommended to use 1–1.5 A˚ before and at least 0.5 A˚ after focusing in practical applications. PBEQ Solver suggests various physical parameters for PB calculations, but users can modify them if necessary.
Implicit Solvent Modeler
Implicit solvent methods have emerged as a popular approximate description of solvent or membrane environments and have been applied successfully to protein–protein or protein–ligand binding thermodynamics, scoring of protein conformations in structure prediction, and peptide and protein folding and unfolding studies.46–48 In particular, CHARMM offers various implicit solvent models that users can apply to their systems. With appropriate guidance and suggested optimal parameters, Implicit Solvent Modeller helps users to setup various implicit solvent models in CHARMM, and run molecular simulations with Langevin dynamics. The available implicit solvent models are analytical continuum electrostatics potential (ACE),49 effective energy function (EEF1/IMM1),50,51 generalized born using molecular volume (GBMV),52,53 generalized born with a simple switching (GBSW),54,55 solvent accessible surface area implicit solvation model (SASA),56 and screened Coulomb potentials implicit solvent model (SCPISM).57 This module also helps users to setup MD simulations of membrane(-bound) proteins in membrane environments using EEF1/IMM1,51 GBMV,53 and GBSW.54
pH change often triggers protein conformational changes via protonation state changes of titratable residues.58–60 Fast, reliable calculations of pKa values in implicit solvent models have made it possible to explore the conformational change at different pH.61–64 Unlike regular MD simulations in which the protonation states of all the titratable residues must be predetermined before the simulations, constant pH MD allows the residues to adopt different protonation states depending on conformations at a constant pH. Therefore, simulations at several different pH will be very helpful to understand protein conformational

Journal of Computational Chemistry DOI 10.1002/jcc

CHARMM-GUI: A Web-Based Graphical User Interface for CHARMM

1863

Figure 3. Overall building procedure of a membrane/protein complex.

changes as a function of pH. Implicit Solvent Modeller also provides the input generation of a constant pH MD64 based on GBSW,54,55 in which users can specify pH and titratable residues (His, Asp, and Glu) whose protonation states will change during the simulations.
Web Browser Tests and Step-by-step Illustrations
The web interfaces for CHARMM-GUI Input Generator have been developed following de facto web standards and extensively tested under Firefox (version 2) and Safari (versions 2). Although all the functionalities work just ﬁne with different web

browsers, we have so far found some minor inconsistency of user interfaces in Internet Explorer (IE) and the beta version of Safari (version 3). In the case of IE versions 6 and 7, some user interface elements look slightly different than those in Firefox and Safari. In the case of beta version of Safari (version 3), the (job) monitoring panel does not work properly.
To provide some step-by-step instructions, we have illustrated how to use Quick MD Simulator with an example of PDB:1KDX (complex of KIX and phosphorylated KID domains) and Membrane Builder with an example of PDB:1ZLL (phospholamban pentamer) in the Supporting Information (Figs. S1– S21), including all the snapshots with some useful annotations.

Figure 4. Molecular graphics views of PDB:1LPJ (human cellular retinol binding protein IV) in (left) ribbon representation and (right) molecular surface representation with electrostatic potential.
Journal of Computational Chemistry DOI 10.1002/jcc

1864

Jo et al. • Vol. 29, No. 11 • Journal of Computational Chemistry

It should be stressed that, since relatively small number of steps in minimization and dynamics are used in CHARMM-GUI Input Generator to make sure that the generated inputs are functional, there is no time limit on the CHARMM-GUI sever. Currently, CHARMM-GUI uses the huge size of CHARMM c34b1 whose maximum number of atoms and residues are 1,000,000 and 800,000, respectively. However, since PDB Reader reads the sequences from the PDB ﬁle, there is a problem in reading more than 1000 residues in a single chain.
Concluding Discussion
We have described functional modules currently available in Input Generator at the CHARMM-GUI website. To the best of our knowledge, no application of a web-based GUI to a biomolecular simulation for interactive input generation and molecular visualization has been attempted so far. We believe that such an effort will provide the quality control of biomolecular simulations with generally accepted standards and well-qualiﬁed methods. Further development is expected to open a door wider to nonexpert users, especially experimentalists, to perform even advanced biomolecular simulations of their own systems, as more illustration and demonstration are provided.
The CHARMM-GUI development project is ongoing. Figure 1 shows more modules that will be available in Input Generator for advanced simulations techniques. Table S3 in the Supporting Information describes each module brieﬂy. It is apparent that the modules currently available in Input Generator provide a basis for such advanced techniques. We are presently working on three modules such as NMR Structure Calculator for NMR structure calculations and reﬁnement, Normal Mode Analyzer for normal mode calculations and visualization, and Boundary Potential Utilizer for simulations with various solvent boundary potentials available in CHARMM. Other higher-level biomolecular simulation techniques listed in Table S3 will be available in Input Generator as the CHARMM-GUI development project progresses.
In addition to the Input Generator, there are several units that make the CHARMM-GUI website unique, such as CHARMMGUI Archive for downloadable resources and Movie Gallery for educational and illustrational purposes. The Archive includes a variety of structural libraries of lipid molecules and bilayers, protein/membrane complexes, and small molecules available in CHARMM. There are two sets of lipid libraries: a library of individual lipid molecules for the replacement method and a library of lipid bilayers with cylindrical pores for the insertion method in Membrane Builder. As mentioned earlier, those libraries are currently for the three types of lipid molecules such as DMPC, DPPC, and POPC. Different types of lipid molecules will be available in lipid libraries, as they are available in Membrane Builder. The protein/membrane complex structures of various membrane proteins have been generated and equilibrated to illustrate the efﬁcacy of Membrane Builder.33 The building and equilibration procedures are well described in ref. 33. The library of small molecules contains 225 organic molecules available in CHARMM all-atom force ﬁeld. Each downloadable small molecular library ﬁle includes the input to generate a small molecule as well as its minimized structure.

Finally, the Movie Gallery displays the biomolecular animations to illustrate a variety of researches in theoretical/computational studies or experimental structural biology. A movie ﬁle that a user uploads is converted to ﬂash animation, and sorted by contributor, title, and snap shot. In particular, there are some historical animations from 80s and early 90s. As the number grows, the movies will be further classiﬁed by the simulation techniques.
Acknowledgments
We are grateful to Martin Karplus, Bernard Brooks, Charles Brooks, Amedeo Caﬂisch, Jianhan Chen, Michael Feig, Sergio Hassan, Jana Khandogin, Jeffery Klauda, Themis Lazaridis, Patrick Lague, Jinhyuk Lee, Nennart Nilsson, Richard Pastor, Thenmalarchelvi Rathinavelan, Benoit Roux, Bernhard Rupp, and Richard Venable for valuable comments and suggestions, as well as providing inputs with optimized parameters. We are thankful to the MarvinSpace team in ChemAxon Ltd. for their support for CHARMM-GUI visualization. Sunhwan Jo and Vidyashankara Iyer are the recipients of the Undergraduate Research Assistant Fund from the University of Kansas. Wonpil Im is 2007 Alfred P. Sloan Research Fellow.
References
1. Brooks, C. L., III; Karplus, M.; Pettitt, B. M. Advances in Chemical Physics, Vol. LXXI; Wiley: New York, 1988.
2. Allen, M. P.; Tildesley, D. J. Computer Simulation of Liquids; Oxford Science Publications, Clarendon Press: Oxford, 1989.
3. McCammon, J. A.; Harvey, S. C. Dynamics of Proteins and Nucleic Acids; Cambridge University Press: Cambridge [Cambridgeshire], New York, 1987.
4. Becker, O. M. Computational Biochemistry and Biophysics; M. Dekker: New York, 2001.
5. Roux, B.; Schulten, K. Structure 2004, 12, 1343. 6. Becker, O. M.; Karplus, M. A Guide to Biomolecular Simulations;
Springer: Dordrecht, Netherlands, 2006. 7. Brooks, B. R.; Bruccoleri, R. E.; Olafson, B. D.; States, D. J.; Swa-
minathan, S.; Karplus, M. J Comput Chem 1983, 4, 187. 8. Case, D. A.; Cheatham, T. E., III; Darden, T.; Gohlke, H.; Luo, R.;
Merz, K. M., Jr.; Onufriev, A.; Simmerling, C.; Wang, B.; Woods, R. J. J Comput Chem 2005, 26, 1668. 9. Jorgensen, W. L.; Tirado-Rives, J. J Comput Chem 2005, 26, 1689. 10. Van Der Spoel, D.; Lindahl, E.; Hess, B.; Groenhof, G.; Mark, A. E.; Berendsen, H. J. J Comput Chem 2005, 26, 1701. 11. Christen, M.; Hunenberger, P. H.; Bakowies, D.; Baron, R.; Burgi, R.; Geerke, D. P.; Heinz, T. N.; Kastenholz, M. A.; Krautler, V.; Oostenbrink, C.; Peter, C.; Trzesniak, D.; van Gunsteren, W. F. J Comput Chem 2005, 26, 1719. 12. Banks, J. L.; Beard, H. S.; Cao, Y.; Cho, A. E.; Damm, W.; Farid, R.; Felts, A. K.; Halgren, T. A.; Mainz, D. T.; Maple, J. R.; Murphy, R.; Philipp, D. M.; Repasky, M. P.; Zhang, L. Y.; Berne, B. J.; Friesner, R. A.; Gallicchio, E.; Levy, R. M. J Comput Chem 2005, 26, 1752. 13. Phillips, J. C.; Braun, R.; Wang, W.; Gumbart, J.; Tajkhorshid, E.; Villa, E.; Chipot, C.; Skeel, R. D.; Kale, L.; Schulten, K. J Comput Chem 2005, 26, 1781. 14. MacKerell, A. D., Jr.; Bashford, D.; Bellot, M.; Dunbrack, R. L.; Evanseck, J. D.; Field, M. J.; Fischer, S.; Gao, J.; Guo, H.;

Journal of Computational Chemistry DOI 10.1002/jcc

CHARMM-GUI: A Web-Based Graphical User Interface for CHARMM

1865

Ha, S. D. J.-M.; Kuchnir, L.; Kuczera, K.; Lau, F. T. K.; Mattos, C.; Michnick, S.; Ngo, T.; Nguyen, D. T.; Prodhom, B.; Reiher, W. E., III; Roux, B.; Schlenkrich, M.; Smith, J.; Stote, R.; Straub, J.; Watanabe, M.; Wiorkiewicz-Kuczera, J.; Karplus, M. J Phys Chem B 1998, 102, 3586. 15. MacKerell, A. D., Jr.; Feig, M.; Brooks, C. L., III. J Am Chem Soc 2004, 126, 698. 16. Foloppe, N.; MacKerell, A. D., Jr. J Comput Chem 2000, 21, 86. 17. MacKerell, A. D., Jr.; Banavali, N. K. J Comput Chem 2000, 21, 105. 18. Feller, S. E.; MacKerell, A. D., Jr. J Phys Chem B 2000, 104, 7510. 19. Klauda, J. B.; Brooks, B. R.; MacKerell, A. D., Jr.; Venable, R. M.; Pastor, R. W. J Phys Chem B 2005, 109, 5300. 20. MarvinSpace. Available at: http://www.chemaxon.com/product/ mspace.html 2007, ChemAxon Ltd. 21. Berman, H. M.; Battistuz, T.; Bhat, T. N.; Bluhm, W. F.; Bourne, P. E.; Burkhardt, K.; Feng, Z.; Gilliland, G. L.; Iype, L.; Jain, S.; Fagan, P.; Marvin, J.; Padilla, D.; Ravichandran, V.; Schneider, B.; Thanki, N.; Weissig, H.; Westbrook, J. D.; Zardecki, C. Acta Crystallogr D Biol Crystallogr 2002, 58, 899. 22. Im, W.; Roux, B. J Mol Biol 2002, 319, 1177. 23. Hunenberger, P. H.; McCammon, J. A. J Chem Phys 1999, 110, 1856. 24. Berkowitz, M.; McCammon, J. A. Chem Phys Lett 1982, 90, 215. 25. Brunger, A.; Brooks, C. L., III; Karplus, M. Chem Phys Lett 1984, 105, 495. 26. Beglov, D.; Roux, B. J Chem Phys 1994, 100, 9050. 27. Im, W.; Berne`che, S.; Roux, B. J Chem Phys 2001, 114, 2924. 28. Essmann, U.; Perera, L.; Berkowitz, M. L.; Darden, T.; Lee, H.; Pedersen, L. G. J Chem Phys 1995, 103, 8577. 29. Ryckaert, J. P.; Ciccotti, G.; Berendsen, H. J. C. J Comput Chem 1977, 23, 327. 30. Nose, S. J Chem Phys 1984, 81, 511. 31. Hoover, W. G. Phys Rev A 1985, 31, 1695. 32. Feller, S. E.; Zhang, Y. H.; Pastor, R. W.; Brooks, B. R. J Chem Phys 1995, 103, 4613. 33. Jo, S.; Kim, T.; Im, W. PLoS ONE 2007, 2, e880. 34. Lomize, M. A.; Lomize, A. L.; Pogozheva, I. D.; Mosberg, H. I. Bioinformatics 2006, 22, 623.

35. Woolf, T. B.; Roux, B. Proc Natl Acad Sci USA 1994, 91, 11631. 36. Woolf, T. B.; Roux, B. Proteins 1996, 24, 92. 37. Shen, L.; Bassolino, D.; Stouch, T. Biophys J 1997, 73, 3. 38. Tieleman, D. P.; Berendsen, H. J. Biophys J 1998, 74, 2786. 39. Faraldo-Gomez, J. D.; Smith, G. R.; Sansom, M. S. Eur Biophys J
2002, 31, 217. 40. Honig, B.; Nicholls, A. Science 1995, 268, 1144. 41. Nina, M.; Beglov, D.; Roux, B. J Phys Chem B 1997, 101, 5239. 42. Roux, B. Biophys J 1997, 73, 2980. 43. Im, W.; Beglov, D.; Roux, B. Comput Phys Comm 1998, 111, 59. 44. Banavali, N. K.; Roux, B. J Phys Chem B 2002, 106, 11026. 45. Gilson, M. K.; Sharp, K.; Honig, B. J Comput Chem 1987, 9, 327. 46. Im, W.; Chen, J. H.; Brooks, C. L., III. Adv Protein Chem 2006, 72,
173. 47. Feig, M.; Brooks, C. L., III. Curr Opin Struct Biol 2004, 14, 217. 48. Roux, B.; Simonson, T. Biophys Chem 1999, 78, 1. 49. Schaefer, M.; Karplus, M. J Phys Chem 1996, 100, 1578. 50. Lazaridis, T.; Karplus, M. Proteins 1999, 35, 133. 51. Lazaridis, T. Proteins 2003, 52, 176. 52. Lee, M. S.; Salsbury, F. R., Jr.; Brooks, C. L., III. J Chem Phys
2002, 116, 10606. 53. Tanizaki, S.; Feig, M. J Chem Phys 2005, 122, 124706. 54. Im, W.; Feig, M.; Brooks, C. L., III. Biophys J 2003, 85, 2900. 55. Im, W.; Lee, M. S.; Brooks, C. L., III. J Comput Chem 2003, 24, 1691. 56. Ferrara, P.; Apostolakis, J.; Caﬂisch, A. Proteins 2002, 46, 24. 57. Hassan, S. A.; Guarnieri, F.; Mehler, E. L. J Phys Chem B 2000,
104, 6478. 58. Kelly, J. W. Structure 1997, 5, 595. 59. Clippingdale, A. B.; Wade, J. D.; Barrow, C. J. J Peptide Sci 2001,
7, 227. 60. Bullough, P. A.; Hughson, F. M.; Skehel, J. J.; Wiley, D. C. Nature
1994, 371, 37. 61. Lee, M. S.; Salsbury, F. R., Jr.; Brooks, C. L., III. Proteins 2004,
56, 738. 62. Dlugosz, M.; Antosiewicz, J. M. Chem Phys 2004, 302, 161. 63. Mongan, J.; Case, D. A.; McCammon, J. A. J Comput Chem 2004,
25, 2038. 64. Khandogin, J.; Brooks, C. L., III. Biophys J 2005, 89, 141.

Journal of Computational Chemistry DOI 10.1002/jcc

