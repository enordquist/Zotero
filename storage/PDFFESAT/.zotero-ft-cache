Generalized Born Model with a Simple Smoothing Function
WONPIL IM, MICHAEL S. LEE, CHARLES L. BROOKS, III Department of Molecular Biology (TPC6), The Scripps Research Institute, 10550 North Torrey
Pines Road, La Jolla, California 92037
Received 3 January 2003; Accepted 10 April 2003

Abstract: Based on recent developments in generalized Born (GB) theory that employ rapid volume integration schemes (M. S. Lee, F. R. Salabury, Jr., and C. L. Brooks III, J Chem Phys 2002, 116, 10606) we have recast the calculation of the self-electrostatic solvation energy to utilize a simple smoothing function at the dielectric boundary. The present GB model is formulated in this manner to provide consistency with the Poisson–Boltzmann (PB) theory previously developed to yield numerically stable electrostatic solvation forces based on ﬁnite-difference methods (W. Im, D. Beglov, and B. Roux, Comp Phys Commun 1998, 111, 59). Our comparisons show that the present GB model is indeed an efﬁcient and accurate approach to reproduce corresponding PB solvation energies and forces. With only two adjustable parameters—a0 to modulate the Coulomb ﬁeld term, and a1 to include a correction term beyond Coulomb ﬁeld—the PB solvation energies are reproduced within 1% error on average for a variety of proteins. Detailed analysis shows that the PB energy can be reproduced within 2% absolute error with a conﬁdence of about 95%. In addition, the solvent-exposed surface area of a biomolecule, as commonly used in calculations of the nonpolar solvation energy, can be calculated accurately and efﬁciently using the simple smoothing function and the volume integration method. Our implicit solvent GB calculations are about 4.5 times slower than the corresponding vacuum calculations. Using the simple smoothing function makes the present GB model roughly three times faster than GB models, which attempt to mimic the Lee–Richards molecular volume.
© 2003 Wiley Periodicals, Inc. J Comput Chem 24: 1691–1702, 2003
Key words: Born model; smoothing function; Poisson–Boltzmann

Introduction
Arguably, molecular simulations in which all solvent molecules are treated explicitly represent the most detailed approach to molecular modeling, protein folding, and the dynamics of biomolecules.1 However, mainly due to the increased time demand of such simulations as the system size increases, considerable effort has been focused on the development of various implicit solvent models in which the average inﬂuence of the solvent on a solute is approximated implicitly.2 In general, continuum electrostatics can be used to deﬁne the electrostatic potential and the electrostatic solvation energy of a solute with arbitrary shape by solving the Poisson–Boltzmann (PB) equation using ﬁnite-difference methods.3–5 There are many successful applications of the PB theory to complex biomolecular problems.6–8 Nonetheless, the computational cost of solving the PB equation has been a bottleneck in the application of PB theory to protein folding and dynamics of biomolecules.9,10
Alternatively, inspired by the Born equation for solvation energies of ions,11 the generalized Born (GB) model has been used quite successfully to estimate the electrostatic solvation energy

⌬G

.12–24
elec

Because

the

GB

model

is

intrinsically

based

on

the

same underlying continuum approximation as used in the PB

theory, its accuracy is naturally assessed by comparison with the

PB results. The most reliable GB formula was ﬁrst proposed by

Still et al.,12

͸ ͱ 1
⌬Gelec ϭ Ϫ 2 ␶ ␣␤

q␣q␤ r␣2 ␤ ϩ R␣GBR␤GBexp͑Ϫr␣2 ␤/4R␣GBR␤GB͒

(1)

where

R

GB ␣

is

the

“effective

Born

radius”

of

atom

␣,

and

␶

ϭ

1/␧p Ϫ 1/␧s where ␧p represents the (low) dielectric response of

the interior of the solute and ␧s the (high) solvent dielectric

constant. ⌬Gelec in Eq. (1) corresponds to the electrostatic free

energy of transferring a solute in a medium of ␧p to a medium of

Correspondence to: C. L. Brooks, III; e-mail: brooks@scripps.edu Contract/grant sponsor: National Institute of Health; contract/grant numbers: GM 37554 and RR 12255 Contract/grant sponsor: NSF (through the CTBP)

© 2003 Wiley Periodicals, Inc.

1692

Im, Lee, and Brooks • Vol. 24, No. 14 • Journal of Computational Chemistry

␧s. In the present study, ␧p is simply set to one to be consistent with the molecular mechanics force ﬁeld. In principle, the “exact” effective Born radii can be calculated by performing PB calculations for one atom at a time by setting all other charges to zero, and then by inserting the calculated self (or atomic) electrostatic solvation energy into the Born equation. The radius obtained from the Born equation represents the distance between a particular atom and the “effective” spherical dielectric boundary. The prime assumption in the GB method is that the solvent-shielded charge– charge interactions in PB can be reproduced by the cross-term in Eq. (1) using the same effective Born radii. Indeed, the GB model of Eq. (1) has been shown to reproduce ⌬Gelec from PB calculations excellently provided that the effective Born radii are accurate.21,23 Thus, the majority of literature on extensions of the GB theory has been focused on the efﬁcient and accurate evaluation of the Born radii.12–24
In continuum electrostatics, the self-electrostatic solvation energy can be expressed rigorously in terms of an integral of a spatially dependent electrostatic ﬁeld density.16,17 Most GB models have approximated the electrostatic ﬁeld as the Coulomb ﬁeld, neglecting the reaction ﬁeld, which is generated by the charge density arising from solvent polarization at the dielectric boundary. This is the so-called “Coulomb ﬁeld approximation.” To obtain the effective Born radii efﬁciently, the integral is then evaluated by numerical surface/volume integration methods,12,16,17,21,24 which are more rigorous than conventional pairwise summation approximations.13,15,18 It is well known that the Coulomb ﬁeld approximation itself underestimates the self-solvation energy, and thus overestimates the effective Born radii compared to the exact Born radii calculated by PB.21 Recently, using a numerical volume integration method with an empirical correction term beyond Coulomb ﬁeld, Lee et al. showed a signiﬁcant improvement over the Coulomb ﬁeld approximation: 1% error on average was achieved for absolute electrostatic solvation energies of a large set of proteins and for relative solvation energies of protein conformations, compared to the corresponding PB solvation energies.21,24
In the surface/volume integration approach, one has to deﬁne the dielectric boundary by which the interior (low dielectric region) and the exterior (high dielectric region) of a solute are divided. In continuum electrostatics, the energy of the system strongly depends on the deﬁnition of the dielectric boundary. Conventionally, either the van der Waals surface (overlapping atomic spheres) or molecular surface (including the reentrant surface) have been used to deﬁne the discontinuous dielectric boundary.25,26 However, it is well known that the discontinuity at the dielectric boundary causes numerical instabilities in the calculation of solvation forces using both PB27,28 and GB with the integration approach.21,24 This problem may be avoided by using a continuous and smooth function at the dielectric boundary. Which smoothing function is best to use is closely related to which dielectric boundary is used in PB. Most GB models have been optimized to reproduce the PB results with molecular surface, which might be the best representation in continuum electrostatics because of its tendancy to reduce artiﬁcial high dielectric constant regions in small voids and crevices in biomolecules. However, there is no way to calculate the molecular surface analytically. Indeed, Lee et al. have developed an elaborate scheme using a Gaussian-type

smoothing function to mimic the molecular surface and to obtain numerically stable solvation forces in their GB model.21,24
The present study is motivated by the fact that there is no analytical GB model that uses the same deﬁnition of the dielectric boundary as used in PB. To obtain numerically stable solvation forces in PB, Im et al. employed a simple polynomial smoothing function at the dielectric boundary, which continuously changes the dielectric constant from ␧p in the interior of the solute to ␧s in the solvent region.28 Here, we develop an equivalent GB theory using the volume integration method and the correction term beyond Coulomb ﬁeld introduced by Lee et al.21,24 Although the dielectric boundary deﬁned by the simple smoothing function does not correspond to the molecular surface representation, the present GB model has several advantages. First, using the simple smoothing function speeds up the GB calculation over GB models that try to mimic the molecular surface.21,24 Second, by using the same type of smoothing function as already employed in PB solvers, we can compare the electrostatic solvation energy as well as the solvation forces between PB and GB. Last, as shown by Im et al.,28 it is relatively easy to calculate the surface of a solute approximately using the simple smoothing function.
The rest of the article is organized as follows. In the next section the background and theoretical developments are given in detail with the numerical implementation of the method. This is followed by numerical tests that compare the electrostatic solvation energy and forces from PB to those from GB. The calculated surface area is also compared with the exact surface. Finally, the computational cost of the present GB model is examined. The article concludes with a brief summary of the main results.

Theoretical Development
The solvation free energy corresponding to the work required to insert a solute of ﬁxed conformation into a polar solvent can be expressed as the sum of nonpolar (np) and electrostatic (elec) contributions, i.e., ⌬Gsolv ϭ ⌬Gelec ϩ ⌬Gnp.2 The nonpolar solvation energy ⌬Gnp includes the formation of a cavity in the solvent as well as solvent–solute van der Waals interactions. This energy term is often expressed as the product of the solventexposed surface area, S, of the solute and a phenomenological surface tension coefﬁcient ␥,27,29,30

⌬Gnp ϭ ␥S.

(2)

The electrostatic solvation energy ⌬Gelec is the work required to
assemble the charges {q␣} of the solute in the solvent, and can be expressed in terms of the reaction ﬁeld potential ␾rf(r) or the reaction ﬁeld Green’s function Grf(r, rЈ),3,4,31

͸ ͸ 1
⌬Gelec ϭ 2

1 q␣␾rf͑r␣͒ ϭ 2

q␣Grf͑r␣, r␤͒q␤,

(3)

␣

␣␤

where Grf(r, rЈ) corresponds to the reaction ﬁeld potential at r due to a point charge at rЈ. Based on continuum electrostatics, in which
the solvent is represented as a featureless high dielectric medium,

Smooth Boundary Generalized Born

1693

the reaction ﬁeld potential ␾rf(r) can be computed by solving the PB equation numerically using ﬁnite-difference methods,3,4,5,28

ٌ ⅐ ͓␧͑rٌ͒␾͑r͔͒ Ϫ ␬៮ 2͑r͒␾͑r͒ ϭ Ϫ4␲␳͑r͒,

(4)

where ␧(r), ␬៮ (r), and ␳(r) are the dielectric constant, the modiﬁed Debye–Hu¨ ckel screening factor, and the ﬁxed charge den-
sity of the solute, respectively. Even though it is possible to
obtain (numerically) stable electrostatic solvation forces in the context of the ﬁnite-difference method,28 the calculations are
too expensive to perform long molecular dynamics (MD) sim-
ulations of biomolecules. An alternative and efﬁcient approxi-
mation is given by the GB model of Eq. (1), which uses a simple analytical formula for the reaction ﬁeld Green’s function Grf(r, rЈ) in Eq. (3).12 It can be shown that Eq. (1) is exact for a pair of atoms, ␣ and ␤, in the limiting cases of r␣␤ 3 0 and r␣␤ 3 ϱ.12,20

Effective Born Radii Evaluation
The quantitative agreement between PB ⌬Gelec and GB ⌬Gelec strongly depends on the effective Born radii {R␣GB}.21,23 Using the Born equation,11 one can extract the exact Born radius, R␣GB, of atom ␣ in a solute from its self-electrostatic free energy, ⌬Gelec,␣, calculated by solving the PB equation [Eq. (4)] after setting all other charges to zero,

⌬Gelec,␣

ϭ

Ϫ

1 2

␶

q␣2 R␣GB

.

(5)

Thus, ⌬Gelec,␣ or R␣GB from PB calculations serve as a benchmark to assess the quality of the effective Born radii calculated by
various approximate GB theories. Based on the Coulomb ﬁeld approximation,12,16,20 one can
express the self-electrostatic solvation energy, ⌬Gelec,␣, as a volume integration,

΂ ͵ ΃ 1 1 1

⌬

G

0 elec,␣

ϭ

Ϫ

2

␶q␣2

␩␣ Ϫ 4␲

dr

␯͑r; ͕r␣͖͒ ͉r Ϫ r␣͉4

,

(6)

rϾ␩␣

where ␩␣ is an arbitrarily deﬁned integration starting point, necessary to avoid the singularity at ͉r Ϫ r␣͉ ϭ 0, and ␯(r) is a solute
volume function that is one in the interior of a solute and zero in

the solvent region. Because the Coulomb ﬁeld approximation

neglects the reaction ﬁeld, it is well known that this approximation

underestimates the self-solvation energy and thus overestimates

the effective atomic Born radii compared to the exact ones calcu-

lated from Eq. (4).21 In principle, one can express the exact atomic

solvation energy, ⌬Gelec,␣, as the sum of a series of correction terms beyond the Coulomb ﬁeld approximation. Recently, Lee et

al.

have

used

an

empirical

correction

term,

⌬

G

, 1
elec,␣

to

the

Cou-

lomb ﬁeld term, ⌬Ge0lec,␣, and demonstrated great improvement

over the Coulomb ﬁeld approximation for the calculated effective

Born radii.21,24 Using the correction term one can approximate

⌬Gelec,␣ as

⌬Gelec,␣ Ϸ a0⌬Ge0lec,␣ ϩ a1⌬Ge1lec,␣,

(7)

where

a0

and

a1

are

empirical

coefﬁcients,

and

⌬

G1 elec,␣

is

given

by,24

΂ ͵ ΃ 1

11

⌬

G

1 elec,␣

ϭ

Ϫ

2

␶q␣2

4␩␣4 Ϫ 4␲

1/4

dr

␯͑r; ͕r␣͖͒ ͉r Ϫ r␣͉7

.

(8)

rϾ␩␣

In continuum electrostatics the deﬁnition of the dielectric boundary is not unique. Moreover, it is well known that a discontinuity at the dielectric boundary causes numerical instability in calculations of solvation forces using ﬁnite-difference PB equations.27,28 To avoid this problem, a continuous and smooth dielectric boundary must be employed. It is also clear from Eqs. (6) and (8) that the volume function ␯(r) should be continuous and smooth to obtain stable solvation forces in the GB model. For this reason the spatially dependent dielectric constant ␧(r) in Eq. (4) was deﬁned as a (smooth) volume exclusion function, Ᏼ(r), going from zero in the interior of a solute to one in the solvent region, in calculations of solvation forces based on ﬁnite-difference PB calculations,28

␧͑r͒ ϭ 1 ϩ ͑␧s Ϫ 1͒Ᏼ͑r; ͕r␣͖͒.

(9)

Ᏼ(r) is a function of all atomic positions {r␣} in the system, and can be expressed as a product of a simple polynomial atomic volume exclusion function H␣(r),28

͹ Ᏼ͑r; ͕r␣͖͒ ϭ H␣͉͑r Ϫ r␣͉͒,

(10)

␣

where

H␣͑r͒

Ά0,

13

1

ϭ 2 ϩ 4w ͑r Ϫ R␣PB͒ Ϫ 4w3 ͑r Ϫ R␣PB͒3,

1,

r Յ R␣PB Ϫ w R␣PB Ϫ w Ͻ r Ͻ R␣PB ϩ w r Ն R␣PB ϩ w
(11)

where r is the distance between a spatial point and atom ␣, R␣PB is the atomic radius to deﬁne the dielectric boundary in PB
calculations, and 2w is a smoothing length that conﬁnes the
region where the smoothing function is applied. The ﬁrst derivative of the smoothing function is zero at R␣PB Ϫ w and R␣PB ϩ w. It should be noted that the smoothed dielectric boundary does not correspond exactly to the van der Waals surface
representation, even though one can recover the van der Waals
surface by setting w to zero. Thus, one can expect some differ-
ence between PB results calculated with the smoothed dielectric
boundary or the boundary deﬁned by van der Waals surface if the same PB radii {R␣PB} are used. Indeed, simple analysis based on the solvation of an ion in water showed that the smoothed
boundary causes a slight shift of the induced solvent charge

1694

Im, Lee, and Brooks • Vol. 24, No. 14 • Journal of Computational Chemistry

density toward the ionic center from the PB radius, i.e., the solvent charge is mostly localized over the distance between RPB Ϫ w and RPB.32 This shift results in an overestimation of the PB solvation energy compared to the PB energy with a discontinuous van der Waals surface. Considering the inﬂuence of the smoothed boundary on the PB energy, Nina et al. used an empirical formula to modify the optimal protein PB radii {R␣PB0} to closely reproduce the PB energies calculated with the van der Waals surface as well as the charging free energies calculated by MD free energy simulations (MD/FES) for 20 standard amino acids.33

R

PB ␣

ϭ

s͑R␣PB0

ϩ

w͒,

(12)

where s is a scaling factor with a value close to 1 and is shown in Table 2 in the article by Nina et al. (1999).32 Interestingly, PB ⌬Gelec calculated for proteins increases as w increases and the extent of its augmentation also increases as the protein size increases. For example, it varies from Ϫ893.7 kcal/mol (w ϭ 0.1 Å) to Ϫ856.9 (w ϭ 0.5 Å) for protein 1AJJ (PDB code: 37 amino acids), and from Ϫ3670 kcal/mol (w ϭ 0.1 Å) to Ϫ3443 (w ϭ 0.5 Å) for protein 1AK6 (PDB code: 174 amino acids). Our interpretation of this result is that the overlapped smoothed dielectric boundary region that was assigned a high dielectric constant in the van der Waals surface deﬁnition is now assigned a low dielectric constant. This suggests that the smoothed dielectric boundary has some ability to prevent high dielectric constants from being assigned in small voids and crevices in biomolecules, even though this surface is rather closely related to the van der Waals surface representation.
It is straightforward to link the volume exclusion function Ᏼ(r) in PB to the volume function ␯(r) in GB, i.e.,

␯͑r; ͕r␣͖͒ ϭ 1 Ϫ Ᏼ͑r; ͕r␣͖͒.

(13)

There are both advantages and disadvantages in using such a simple smoothing function. One disadvantage is that most GB models have been optimized to reproduce the PB results with the molecular surface,21,24 and thus, the energies are not directly comparable between these models. Nonetheless, the present GB model also has a number of advantages regarding the speedup in GB calculations and the direct comparison between PB and GB solvation forces (see Numerical Tests and Discussion). Furthermore, as proposed by Im et al., it is relatively easy to calculate the solvent-exposed surface area approximately using the simple smoothing function,28

͵S Ϸ drʈٌᏴ͑r; ͕r␣͖͒ʈ

͸͵ ͹ ϭ

drʈٌH␣͉͑r Ϫ r␣͉͒ʈ H␤͉͑r Ϫ r␤͉͒.

(14)

␣

␤␣

Numerical Implementation
Following recent developments of Lee et al.,21 we used numerical quadrature techniques for the integration of Eqs. (6) and (8). In this context, Eqs. (6) and (8) can be approximated as

ͩ ͸ ͸ ͪ 1 1 1

⌬

G

0 elec,␣

Ϸ

Ϫ

2

␶q␣2

␩␣ Ϫ 4␲

m

n

wmwn

␯͑r␣

ϩ rmn; rm2 n

͕r␣͖͒

(15)

and

ͩ ͸͸ ͪ 1

11

⌬Ge1lec,␣ Ϸ Ϫ 2 ␶q␣2 4␩␣4 Ϫ 4␲ m

n

wmwn

␯͑r␣

ϩ rmn; rm5 n

͕r␣͖͒

1/4
,

(16)

where indices m and n are for radial and angular integration points, wm and wn are weights for radial and angular integration components, and rmn is the integration point centered at the origin. In the present study, the integration points and weights for the radial component are generated by the Gaussian–Legendre quadrature34 and those for the angular component by the Lebedev quadrature.35 Therefore, the integration can be viewed as a mapping of those integration points onto each atom followed by the summation over spherically arranged integration points around each atom. In terms of Eqs. (5) and (7), the effective atomic Born radii are given by

1

1

R

GB ␣

ϭ

Ϫ

2

␶q␣2

a0⌬Ge0lec,␣

ϩ

a1⌬Ge1lec,␣

.

(17)

It should be noted that the effective Born radii do not depend on
atomic charges but only on the conformation of a solute as well as
atomic PB radii, as seen in Eq. (17).
The calculation of solvation forces becomes complicated because the effective Born radius of atom ␣ is a function of all other atoms as well as atom ␣ through the fact that the volume function ␯(r; {r␣}) is a function of both a position in the system and all atomic positions. Nonetheless, one can express the electrostatic solvation force acting on atom ␣ as

͸ Ѩ⌬Gelec Ѩr␣

ϭ

Ѩ⌬Gelec Ѩr␣␤

Ѩr␣␤ Ѩr␣

ϩ

␤

Ѩ⌬Gelec ѨR␤GB

ѨR␤GB Ѩr␣

.

(18)

The ﬁrst term becomes

͸ Ѩ⌬Gelec Ѩr␣␤

Ѩr␣␤ Ѩr␣

ϭ

Ϫ

␶ 4

␤

␣

q␣q␤͓4 Ϫ exp͑ϪD␣␤͔͒ ͓r␣2 ␤ ϩ R␣GBR␤GBexp͑ϪD␣␤͔͒3/

2

͑r␤

Ϫ

r␣͒,

(19)

where

Smooth Boundary Generalized Born

1695

D␣␤

ϭ

r ␣2 ␤ 4R␣GBR␤GB

.

(20)

In the second term of Eq. (18), the derivatives of ⌬Gelec relative to effective atomic Born radii simply become

͸ ͩ ͪ Ѩ⌬Gelec ѨR␤GB

ϭ

␶ 2

␥

q␤q␥exp͑ϪD␤␥͒ ͓r␤2 ␥ ϩ R␤GBR␥GBexp͑ϪD␤␥͔͒3/ 2

R␥GB

ϩ

r␤2 ␥ 4R␤GB

.

(21)

However, the derivatives of effective atomic Born radii relative to atom ␣ are more involved, such as

͸ ͸ Ѩ

R

GB ␤

Ѩr␣

ϭ

͑R␤GB͒2 4␲

m

n

wmwn

Ѩ␯͑r␤ ϩ Ѩr␣

rmn͒

ͫ ͩ ͪ ͬ ϫ

a0 rm2 n

Ϫ

1 4

1 ␶q␤2 2 ⌬Ge1lec,␤

3 a1 rm5 n

,

(22)

where the derivatives of the volume functions ␯(r) relative to atom ␣ become, when, ␤ ϭ ␣,

͸ Ѩ␯͑r␣ ϩ Ѩr␣

rmn͒

ϭ

Ϫ
␥

␣

ѨH␥͉͑r␣

ϩ rmn Ѩr␣

Ϫ

r␥͉͒

Ᏼ͉͑r␣ ϩ rmn͉͒ H␥͉͑r␣ ϩ rmn Ϫ r␥͉͒

,

(23)

and when ␤ ␣,

Ѩ␯͑r␤ ϩ Ѩr␣

rmn͒

ϭ

Ϫ

ѨH␣͉͑r␤

ϩ rmn Ѩr␣

Ϫ

r␣͉͒

Ᏼ͉͑r␤ H␣͉͑r␤ ϩ

ϩ rmn͉͒ rmn Ϫ r␣͉͒

.

(24)

The derivatives of the atomic volume function H(r) in Eqs. (23) and (24) are, respectively,

ͩ ͪ Ѩ

H

␥͉͑r Ϫ Ѩr

r␥͉͒

ϭ

33 4w Ϫ 4w3 ͉͑r Ϫ r␥͉ Ϫ R␥PB͒2

r Ϫ r␥ ͉r Ϫ r␥͉

(25)

and

ͩ ͪ Ѩ

H

␣͉͑r Ϫ Ѩr␣

r␣͉͒

ϭ

Ϫ

33 4w Ϫ 4w3 ͉͑r Ϫ r␣͉ Ϫ R␣PB͒2

r ͉r

Ϫ Ϫ

r␣ r␣͉

.

(26)

Similarly, the surface of a solute can be also easily calculated using Eq. (14) and the numerical quadrature techniques,

͸ ͸ ͸ ͹ S Ϸ

wmwnʈٌH␣͑rmn͒ʈ H␤͉͑r␣ ϩ rmn Ϫ r␤͉͒. (27)

␣mn

␤␣

It should be noted that the numerical integration needs to be performed only in the smoothed boundary region because the gradient of atomic volume function H(r) is zero elsewhere. Ac-

cording to Eq. (2), the nonpolar solvation force acting on atom ␣ is proportional to the derivatives of the surface relative to atom ␣,

͸ ͸ ѨS
Ѩr␣ ϭ

wmwnʈٌH␣͑rmn͒ʈ

mn

ͩ͸ ͪ ϫ

ѨH␤͉͑r␣ ϩ rmn Ϫ r␤͉͒ ͟␥ ␣ H␥͉͑r␣ ϩ rmn Ϫ r␥͉͒

␤␣

Ѩr␣

H␤͉͑r␣ ϩ rmn Ϫ r␤͉͒

͸ ͸ ͸ ϩ

wmwnʈٌH␤͑rmn͒ʈ

␤␣m n

ͩ ͪ ϫ

ѨH␣͉͑r␤ ϩ rmn Ϫ r␣͉͒ ͟␥ ␤ H␥͉͑r␤ ϩ rmn Ϫ r␥͉͒

Ѩr␣

H␣͉͑r␤ ϩ rmn Ϫ r␣͉͒

.

(28)

As the number of atoms (Natom) in the system increases, the integration of Eqs. (15), (16), and (27) becomes prohibitively

costly because the volume function ␯(r␣ ϩ rmn; {r␣}) is a function

of both an integration point of atom ␣, r␣ ϩ rmn, and all atomic

positions

{r␣}.

In

a

nutshell,

the

integration

requires

N int

ϫ

N

2 atom

operations, where Nint is the total number of integration points.

However, this operation is signiﬁcantly reduced to Nint ϫ Natom ϫ

Nlist, where Nlist is the small number of atoms that contribute to the

volume function in the vicinity of an integration point of an atom.

Such a signiﬁcant reduction is made possible by the fact that the

smoothing length is typically less than 1 Å and that most atoms

have H␤(r␣ ϩ rmn) ϭ 1 for ␯(r␣ ϩ rmn; {r␣}) according to Eq. (11). Thus, it is essential to build a lookup table that quickly

establishes which atom contributes to the volume function in the

vicinity of an integration point.21 For efﬁciency, the lookup table

is built on a grid with a mesh size of d, i.e., each grid point

contains a list of atoms. During the integration, each integration

point is assigned into the closest grid point, and only the atoms

associated with the grid point is used for the integration. To make

sure that all atoms necessary for the correct integration at an

integration point are listed in the grid point assigned by the

integration point, atom ␣ is included in the list of the grid point if

the distance between atom ␣ and the grid point is less than Rcut where

ͱ3

Rcut ϭ R␣PB ϩ w ϩ 2 d ϩ rbuffer.

(29)

The third term is necessary to recover atoms which lie on the grid

interface. The lookup table is updated during the computer simu-

lations only if any atom in the system moves more than a buffer

length rbuffer. If necessary, rbuffer can be speciﬁed to update the lookup table less frequently. Because the choice of d, w, and rbuffer affects the calculation speed, they should be optimized for each

system before long computer simulations (see Numerical Tests and

Discussion).

Because we do not know initially how many atoms, Nlist, are

associated with each grid point, we have to determine Nlist accord-

ing

to

Eq.

(29)

and

allocate

the

corresponding

memory,

i.e.,

¥ N grid i

Nlist,i, where Ngrid is the total number of grids having a neighbor-

1696

Im, Lee, and Brooks • Vol. 24, No. 14 • Journal of Computational Chemistry

Table 1. Coefﬁcients a0 and a1 in Eq. (7) for Different Smoothing Lengths (2w). w (Å)

0.1

0.2

0.3

0.4

0.5

a0

Ϫ0.081

Ϫ0.148

Ϫ0.180

Ϫ0.168

Ϫ0.154

a1

1.600

1.729

1.817

1.856

1.886

0.6
Ϫ0.173 1.945

ing atom list and Nlist,i is the number of atoms listed in the ith grid point. This precalculation is necessary to reduce memory requirements. Once the lookup table is ﬁlled with atom lists, the integration of Eqs. (15) and (16) is relatively straightforward. One can now assign the integration point to a particular grid point closest to it, and calculate the volume function at the integration point by evaluating the atomic volume exclusion function according to Eqs. (11) and (13). After the calculation of effective Born radii is done, the evaluations of GB ⌬Gelec in Eq. (1) as well as Ѩ⌬Gelec/ѨR␤GB for forces in Eq. (18) can be performed using the preestablished nonbonded atom list. For completion of force calculations, the evaluation of Ѩr␣␤/Ѩr␣ in Eq. (22) can be done using the lookup table, similar to the integration of Eqs. (15) and (16). Evaluations of the surface Eqs. (27) and (28) are simpler than the electrostatic part. The present development has been implemented into the GBSW module in the CHARMM biomolecular simulation program.38
Parametrization
The performance of the present GB model largely depends on two parameters a0 and a1 in Eq. (7). Assuming that a0 and a1 are insensitive to conformational changes of proteins, they were optimized to obtain the least error between GB ⌬Gelec,␣ and PB ⌬Gelec,␣ for each atom of protein 1AJJ (PDB code: 37 amino acids). For this procedure, all PB calculations were performed with a grid spacing of 0.21 Å using the PBEQ module28,36,37 of CHARMM.38 The modiﬁed optimal PB radii for proteins32,33 according to Eq. (12) and the charges from the all-atom parameter set PARAM2239 were used for both PB and GB. For GB calculations, 50 radial integration points up to 20 Å and 38 angular integration points were used in the integration of Eqs. (15) and (16) for each atom. The integration points and weights for the radial component are generated by Gaussian–Legendre quadrature,34 and those for the angular component by the Lebedev quadrature,35 as noted above. PB and GB calculations were performed for several different smoothing lengths. Table 1 shows the optimized a0 and a1 for each smoothing length.
Numerical Tests and Discussions
To assess the performance of the present GB model, the GB electrostatic solvation energies are ﬁrst compared with corresponding PB energies for two different sets of proteins. The ﬁrst set (SET1) is composed of 611 single-chain proteins obtained from the Brookhaven Protein Data Bank (PDB)40 based on the criteria

of very low-sequence identity and high resolution. The second set

(SET2) is made up of 251 unfolded and folded conformations of

protein L.41 The electrostatic forces calculated from GB are then

compared with those from PB for two proteins. The accuracy of

the calculated surface using Eq. (27) is also assessed by compar-

ison with the exact surface.

All PB calculations were preformed in the same manner as

described above. Because the cost of the GB calculation scales

linearly as the number of integration points, we empirically

changed the number of integration points to reduce this cost

without sacriﬁcing the GB performance too much. As shown in

Figure 1, optimal for GB calculations were 38 angular integration

points and 24 radial integration points up to 20 Å (5 points

between 0.5 and 1 Å, and 19 points between 1 and 20 Å). Because

the surface calculation requires the integration only within the

smoothed boundary region according to Eq. (27), only three radial

integration points were used with a ﬁxed smoothing length of 0.2

Å

(w

ϭ

0.1

Å)

for

each

atom,

i.e.,

between

(R␣PB

Ϫ

0.1)

and

(

R

PB ␣

ϩ 0.1) Å. Different smoothing lengths can be used for electrostatic

Figure 1. Comparison between PB and GB self-electrostatic solvation free energies ⌬Gelec,␣ for all atoms of 22 relatively small proteins. The number of amino acides in the protein dataset ranges 37 to 98. GB calculations were performed with 38 angular integration points and 100 (green), 50 (black), and 24 (red) radial integration points. The correlation coefﬁcient R is also given in the ﬁgure. It is hard to see the green points because those are all overlapped with black and red points. The ﬁgure clearly shows that using 24 radial integration points is ﬁne enough to obtain accurate ⌬Gelec,␣, i.e., effective Born radii.

Smooth Boundary Generalized Born

Table 2. Summary of Error Statistics (in kcal/mol)a between GB and PB Electrostatic Solvation Energies with Different Smoothing Lengths (2w).

w (Å)

0.1

0.2

0.3

0.4

SET1: 611 proteins ave. error max error
SET2: 215 conformations of protein L.
ave. error max error

55.6 Ϯ 51.8 429.7
39.1 Ϯ 5.7 54.1

22.8 Ϯ 19.5 118.3
7.5 Ϯ 4.7 19.4

21.9 Ϯ 21.5 153.0
6.7 Ϯ 3.9 16.4

24.2 Ϯ 23.8 146.3
12.6 Ϯ 5.1 26.2

aThe error is deﬁned as ͉⌬GPB Ϫ ⌬GGB͉ for each protein or each conformation.

0.5
43.5 Ϯ 38.9 323.6
34.8 Ϯ 6.0 51.9

1697
0.6 52.5 Ϯ 43.4
367.0 48.0 Ϯ 6.9
68.1

solvation energy and surface calculations because they are not coupled. It was shown before that the surface can be calculated more accurately with smaller w.28 Unless speciﬁed explicitly, there is no cutoff for the calculation of ⌬Gelec in Eq. (1).
Electrostatic Solvation Energies and Forces
The GB performance is mostly assessed by comparing GB ⌬Gelec with PB ⌬Gelec. Table 2 provides a summary of error statistics for the ﬁrst set of 611 proteins (SET1) as the relative energy differences between PB and GB for different smoothing lengths. The electrostatic solvation energies in this set range from Ϫ250 to Ϫ13,000 kcal/mol; the proteins range from 19 to 839 residues. In Figure 2a, all GB ⌬Gelec are compared with the corresponding PB ⌬Gelec for the case of w ϭ 0.3 Å. Even though the agreement looks perfect, it is not easy to understand detailed statistics from the ﬁgure because the range of solvation energies is so large. For example, the same kind of plot with w ϭ 0.5 Å also shows perfect agreement with the correlation coefﬁcient of 0.9997 (data not shown), even though Table 2 shows that the error with w ϭ 0.5 Å is at least twice larger than that with w ϭ 0.3 Å. As shown in Figure 2b, a better representation of the statistical error can be obtained by plotting the number of proteins and the average error percentages as a function of the energy difference between PB and GB. There are 360 proteins (about 55%) within 20 kcal/mol difference between PB and GB, and 575 proteins (about 95%) within 60 kcal/mol difference. In SET1, 20 kcal/mol difference roughly corresponds to 1% error on average and 60 kcal/mol to 2% error. Indeed, the average error percentages are 2.38 Ϯ 1.51 (w ϭ 0.1), 1.12 Ϯ 0.86 (w ϭ 0.2), 1.07 Ϯ 0.89 (w ϭ 0.3), 1.22 Ϯ 1.06 (w ϭ 0.4), 2.08 Ϯ 1.47 (w ϭ 0.5), and 2.57 Ϯ 1.60% (w ϭ 0.6), respectively (see also Table 2). The agreement between PB and GB is very impressive, considering that a0 and a1 were optimized with only one small protein. In the present GB model, it is possible to reproduce the PB energy within 2% with conﬁdence of about 95% if w ϭ 0.2, 0.3, or 0.4 are used.
Table 2 shows the relative errors for 251 unfolded and folded conformations of protein L. (SET2) with different smoothing lengths. The PB energies range approximately from Ϫ1050 kcal/ mol to Ϫ1550 kcal/mol. The average error percentages are 3.01 Ϯ 0.45 (w ϭ 0.1), 0.58 Ϯ 0.37 (w ϭ 0.2), 0.52 Ϯ 0.31 (w ϭ

Figure 2. (a) Comparison between ⌬GPB and ⌬GGB for SET1 with a smoothing length of 0.6 Å (w ϭ 0.3 Å). The correlation coefﬁcient R
is 0.9998. (b) Number of proteins (bar) and average error percentages (solid line) as a function of error between ⌬GPB and ⌬GGB for SET1 with w ϭ 0.3 Å. A 5.0 kcal/mol bin was used in calculations of
number of proteins and average error percentages with its standard deviation. The error percentage is deﬁned as ͉⌬GPB Ϫ ⌬GGB͉/͉⌬GPB͉ ϫ 100.

1698

Im, Lee, and Brooks • Vol. 24, No. 14 • Journal of Computational Chemistry

0.3), 0.99 Ϯ 0.40 (w ϭ 0.4), 2.78 Ϯ 0.48 (w ϭ 0.5), and 3.89 Ϯ 0.53% (w ϭ 0.6), respectively. Again, the agreement between PB and GB is excellent particularly for w ϭ 0.2, 0.3, or 0.4.
It is conceivable that the agreement between PB ⌬Gelec and GB ⌬Gelec for various proteins and conformations may indicate agreement in electrostatic solvation forces between PB and GB. Nonetheless, it is interesting to see how well GB reproduces PB solvation forces. It is well known that numerically stable forces cannot be obtained in ﬁnite-difference PB calculations without smoothness of the dielectric boundary.28 Thus, no attempt has been made so far to compare electrostatic solvation forces between PB and GB using the van der Waals surface or the molecular surface. In this study, however, we are able to compare GB solvation forces directly with PB solvation forces because the same smoothing function is used for both PB and GB. Two proteins are chosen based on the error percentage between PB and GB energies; 1A63 (PDB code; 120 amino acids) with 1.2% error and 1AK6 (PDB code; 174 amino acids) with 4.3% error when w ϭ 0.3 Å. In Figure 3a and b, all X-, Y-, and Z-components of the GB solvation forces of heavy atoms are compared with the corresponding PB forces. The average error between PB and GB forces are 0.78 Ϯ

Figure 4. Variation of total energy during a 100-ps MD trajectory of the protein 1A63 at 300 K. In the inset, its variation after about 25 ps is plotted to clearly show the extent of the energy ﬂuctuations. The lookup table as well as the (electrostatic plus nonpolar) solvation forces were updated every step of dynamics (1 femtosecond). For the GB calculations, we used 38 angular integration points and 24 radial integration points up to 20 Å. For the nonpolar solvation energy, the surface tension coefﬁcient ␥ was set to 0.03 kcal/(mol ⅐ Å2).

Figure 3. Comparison between GB and PB electrostatic solvation forces for two proteins 1A63 (PDB code: 120 amino acids) and 1AK6 (PDB code: 174 amino acids) with a smoothing length of 0.6 Å (w ϭ 0.3 Å).

0.90 kcal/(mol ⅐ Å) with a maximum error of 10.62 kcal/(mol ⅐ Å) (1A63), and 0.89 Ϯ 1.04 kcal/(mol ⅐ Å) with a maximum error of 11.79 kcal/(mol ⅐ Å), respectively. The GB forces clearly show reasonably good agreement with the PB forces even though the latter has some oscillation (or uncertainty) due to the discreteness of the grid.28 To illustrate the oscillation in PB forces, the PB forces for 1AK6 were recalculated after adding a quarter of the grid spacing (0.0525 Å) to the coordinates of all atoms. The average error between PB forces before and after translation was 0.13 Ϯ 0.26 kcal/(mol ⅐ Å), with a maximum error of 4.14 kcal/(mol ⅐ Å). Interestingly, the GB forces of 1AK6 are as reliable as those of 1A63 even though 1AK6 shows higher error than 1A63 in comparison of the solvation energy. It should be stressed that the PB force calculation for 1AK6 took nearly 3 h of CPU time on a 360 MHz SGI R10K with a grid of 417 ϫ 327 ϫ 303, whereas the GB forces took only about 3 s.
Another measure to assess the accuracy of solvation forces calculated from the present continuum model is to monitor the conservation of total energy during MD simulations. We generated 100 ps trajectories of the protein 1A63 at 300 K with the Verlet algorithm after minimization of 200 steps. To prevent abrupt distortions, a positional harmonic restraint with a force constant of 0.1 kcal/(mol ⅐ Å2) was applied to all heavy atoms during the ﬁrst 10 ps of the simulation. During 30 ps of equilibration, the velocities of each atom were reassigned to maintain proper temperature ranges. As shown in Figure 4, the total energy is very well conserved after 25 ps, demonstrating the accuracy of calculated solvation forces.
Surface Area
Because the nonpolar solvation energy of a solute is proportional to its solvent-exposed surface area in the present continuum model,

Smooth Boundary Generalized Born

Table 3. Summary of Error Statistics in Comparison between Exact Surface and Numerically Calculated Surface for 611 Proteins with Different Smoothing Lengths (2w).

w (Å)

0.1

0.2

0.3

0.4

Ave. error (%) Max error (%)

0.43 Ϯ 0.34 2.09

0.45 Ϯ 0.38 2.63

0.47 Ϯ 0.39 2.50

0.48 Ϯ 0.40 2.20

0.5
0.51 Ϯ 0.43 2.43

1699
0.6 0.52 Ϯ 0.43
2.43

it is important to calculate the surface area efﬁciently and accurately. Previously, Im et al. showed that the surface area can be calculated accurately using Eq. (14) on a grid.28 In this study, we are able to calculate it efﬁciently and accurately using Eq. (27) by taking advantage of numerical quadrature techniques. Table 3 shows the average error percentages between the exact surface and the numerically calculated surface of the 611 proteins in SET1 with different smoothing lengths. It is noted that the calculated surface area slightly depends on the smoothing length because the PB radii are slightly changed with w according to Eq. (12). The surface area in this set ranges from 1480 to 47550 Å2. In Fig. 5a, all numerically calculated surfaces in SET1 are compared with the corresponding exact surfaces in the case of w ϭ 0.3. In Figure 5b, all numerically calculated atomic surfaces are compared with the corresponding exact atomic surfaces for individual heavy atoms of the protein 1A63. The error is 1.0 Ϯ 1.1 Å2, with a maximum error of 8.2 Å2. All the results presented here indicate that the numerically calculated surface area reproduces the exact solvent-exposed surface area within 0.5% error on average.
Computational Timing
In the results presented so far, no cutoff has been used in calculations of GB ⌬Gelec in Eq. (1), which is indeed necessary to get good agreement between PB and GB. Because the electrostatic solvation energy and the (vacuum) Coulombic interaction energy should be balanced in computer simulations, both must be treated with the same cutoff. However, it is not practical to use no cutoff in computer simulations of biomolecules because the calculations become prohibitively costly as the number of atoms in the system increases. This problem can be circumvented by taking advantage of the well-known fact that the Coulombic interaction energy is strongly anticorrelated with the electrostatic solvation energy, i.e., the total (Coulomb plus solvation) electrostatic energy and forces are converged rapidly as a cutoff value increases.18 Table 4 shows errors of individual electrostatic energy terms and total electrostatic forces as a function of the cutoff value relative to those with no cutoff for protein 1AK6. Calculations with other proteins show similar trends (data not shown). It is observed that the sum of Coulomb and GB terms, needed in computer simulations, indeed shows rapid convergence, even though both terms themselves are not converged even with a large cutoff of 22 Å. The total energy appears to be converged even at a cutoff of 8 Å, but the energy itself is not a reliable measure to see the trend of convergence because of its ﬂuctuation. The errors in total electrostatic forces turn out to be a more reliable measure of the convergence as a

function of cutoff. The results without a switching function show better convergence than those with a switching function beyond a cutoff of 12 Å. This shows the general trend of convergence of the total electrostatic energy and forces as a function of cutoff, and which cutoff value is good to use will depend on the system being studied.
Figure 5. (a) Comparison between the exact surfaces and the numerically calculated surfaces using Eq. (27) for SET1. The correlation coefﬁcient R is 0.9985. (b) Comparison between the exact surfaces and the numerically calculated surfaces for individual heavy atoms of protein 1A63 of 120 amino acids. The correlation coefﬁcient R is 0.9902.

1700

Im, Lee, and Brooks • Vol. 24, No. 14 • Journal of Computational Chemistry

Table 4. Errors in Individual Electrostatic Energy Terms and Total Electrostatic Forces Relative to Those with No Cutoff for Protein 1AK6.

Cutoff (Å)

Coulomb

GB

Coulomb ϩ GB

(%)

(%)

(%)

With a switching functionb

8

32.73

7.11

0.41

10

21.26

4.86

0.07

12

43.33

9.92

0.12

14

69.92

16.03

0.18

16

38.94

8.93

0.09

18

35.69

8.19

0.08

20

7.44

1.71

0.17

22

23.36

5.36

0.06

Without a switching function

8

34.39

9.18

0.96

10

43.28

9.40

0.54

12

48.29

11.21

0.01

14

25.46

5.80

0.09

16

55.89

12.82

0.14

18

5.65

1.30

0.01

20

14.80

3.40

0.03

22

8.11

1.86

0.02

aThe average force error ͉Fcut͉ Ϫ ͉Fnocut͉ and the maximum error in parenthesis for all heavy atoms. bA switching function is applied form rcut Ϫ 2 to rcut.

Forcesa (kcal/mol/Å)
0.232 Ϯ 0.326 (2.975) 0.114 Ϯ 0.162 (1.711) 0.070 Ϯ 0.093 (0.877) 0.050 Ϯ 0.063 (0.548) 0.041 Ϯ 0.058 (0.381) 0.035 Ϯ 0.046 (0.480) 0.034 Ϯ 0.044 (0.371) 0.031 Ϯ 0.039 (0.381)
0.347 Ϯ 0.457 (4.468) 0.162 Ϯ 0.251 (2.582) 0.068 Ϯ 0.111 (1.372) 0.030 Ϯ 0.051 (0.660) 0.013 Ϯ 0.021 (0.292) 0.007 Ϯ 0.009 (0.101) 0.004 Ϯ 0.005 (0.086) 0.003 Ϯ 0.004 (0.033)

It is of interest to examine the computational time required by the present continuum GB/SA model relative to the vacuum calculation as a function of the system size, different cutoffs, or the grid spacing d for the lookup table. For this purpose, three proteins were chosen based on their size. According to their PDB code, these proteins are 1AJJ (37 residues and 519 atoms), 1AK6 (174 residues and 2738 atoms), and 1YGE (839 residues and 13,265 atoms). The computation time was measured for 1000 steps of molecular dynamics simulation on a 360 MHz SGI R10K. The lookup table as well as the (electrostatic plus nonpolar) solvation forces were updated every step of dynamics. The results are summarized in Table 5. First, the cost of calculating the solvation

terms relative to the vacuum calculation decreases as the cutoff value increases. This result arises from the fact that the cost of the nonbonded interactions increases as the cutoff value increases, whereas that of calculating the effective Born radii remains the same regardless of cutoff. Second, the GB/SA performance is improved as the number of atoms in the system increases, demonstrating its favorable scaling with respect to the system size. Third, the grid spacing used for the lookup table affects the GB/SA performance. In general, a smaller grid spacing than 1.5 Å yields a deterioration of performance because the number of atoms listed in the lookup table increases as the grid spacing is decreased. Overall, it is expected that the present GB/SA model will be well

Table 5. Computation Time (in Minutes) for 1000 Steps of Dynamics.a

1AJJ

Cutoff

db

r bufferc

(Å)

(Å)

(Å)

Vacuum

GB/SA

1AK6

Vacuum

GB/SA

1YGE

Vacuum

GB/SA

12

1.5

0.0

0.44

2.87 (6.5ϫ)

3.8

22.3 (5.8ϫ)

27.7

134 (4.9ϫ)

14

1.5

0.0

0.52

3.07 (5.9ϫ)

5.1

24.7 (4.8ϫ)

36.0

159 (4.4ϫ)

16

1.5

0.0

0.60

3.28 (5.5ϫ)

6.8

28.9 (4.2ϫ)

50.4

194 (3.8ϫ)

16

1.0

0.0

0.60

3.40 (5.7ϫ)

6.8

29.4 (4.3ϫ)

50.4

238 (4.7ϫ)

16

2.0

0.0

0.60

3.29 (5.5ϫ)

6.8

28.9 (4.2ϫ)

50.4

184 (3.7ϫ)

16

1.5

0.5

0.60

3.27 (5.4ϫ)

6.8

29.0 (4.3ϫ)

50.4

196 (3.9ϫ)

aFor the nonpolar solvation energy, the surface tension coefﬁcient ␥ was set to 0.03 kcal/(mol ⅐ Å2). The value in
parenthesis represents a relative time to the corresponding vacuum dynamics. bd is the grid spacing used for the lookup table in Eq. (29). crbuffer is the buffer size used for the lookup table in Eq. (29). Setting rbuffer to zero means that the lookup table is updated every step of dynamics. The Born radii were updated at every time step.

Smooth Boundary Generalized Born

1701

suited for simulations of large biomolecules because using a large grid spacing reduces the overhead required for atom lists in the lookup table. For example, when the cutoff value is set to 16 Å, the vacuum simulation of protein 1YGE requires 60 Mbytes of memory, whereas the GB/SA simulations require 87 Mbytes with a grid spacing of 2.0 Å and 104 Mbytes with a grid spacing of 1.0 Å.
To examine the effect of having a buffer in Eq. (29), i.e., the effect of the update frequency for the lookup table, additional simulations were performed with a buffer size of 0.5 Å. The results are shown in Table 5. As the system size increases, using a buffer slightly worsens the GB/SA performance because the number of atoms in the lookup table increases as the buffer size increases, according to Eq. (29). This demonstrates that the present scheme for generating the lookup table is very efﬁcient. Detailed analysis with protein 1AK6 showed that calculations of the lookup table, GB ⌬Gelec and its forces, and ⌬Gnp and its forces took 4.3, 92.9, and 2.8% of the total time for the GB/SA terms, respectively. The calculation of ⌬Gnp (i.e., the surface area) appears to be quite efﬁcient because its calculation also utilizes the preestablished lookup table.
Last, we performed the same MD simulations with the GBMV module (volume integration method for molecular surface representation)21,24 in CHARMM.38 A cutoff of 16 Å was used without a switching function. With GBMV the simulations took 12.4 (1AJJ), 90.0 (1AK6), and 556.7 min (1YGE) for 1000 steps of dynamics, respectively, showing that GBMV is roughly three times slower than the present GB model. The speedup of the present GB model relative to GBMV mostly comes from the fact that GBMV uses a longer tail in the volume function, which is necessary to ﬁt the molecular surface deﬁnition, and thus requires a signiﬁcantly larger number of atoms in the lookup table than the present GB.
Concluding Discussion
Based on the recent GB theory of Lee et al.,21,24 we reformulated the calculation of the self-electrostatic solvation energy through the use of a simple smoothing function to represent the dielectric boundary, and a volume integration method analogous to that of the earlier study. The present GB model is consistent with a previously developed PB theory, which yields numerically stable electrostatic solvation forces using ﬁnite-difference methods.28 Our evaluations of this new GB model showed that it is indeed an efﬁcient and accurate approach to reproduce corresponding PB solvation energies and forces. Having only two adjustable parameters, a0 for the Coulomb ﬁeld term and a1 for the correction term beyond Coulomb ﬁeld, the PB solvation energies can be reproduced within 1% error on average for a variety of proteins. Detailed analysis shows that it is possible to reproduce the PB energy to within 2% with conﬁdence of about 95% if w ϭ 0.2, 0.3, or 0.4 are used. It is also shown that the solvent-exposed surface area of a biomolecule for the nonpolar solvation energy can be calculated very accurately and efﬁciently using the simple smoothing function.
The relative computational time required for the present GB/SA model depends on the system size, different cutoffs, and the grid spacing for the lookup table. The calculations including

GB/SA are usually 4.5 times slower than the corresponding vacuum calculations. In general, the GB/SA performance (relative to a vacuum calculation) increases as the size of the system or the cutoff value increases due to the scaling behavior of our algorithm. It is expected that this continuum model will be well suited for computer simulations of large biomolecules because using a large grid spacing reduces the overhead required for atom lists in the lookup table.
As expected, using the simple smoothing function makes the GB calculation roughly three times faster than the GB calculation which mimics the molecular surface deﬁnition. As discussed, the simple smoothed dielectric boundary introduced here is rather closely related to the van der Waals surface, even though it has some ability to prevent interior voids with high dielectric constant values from being assigned in biomolecules. Which surface representation is the best to use in the implicit solvent model is an open question and is still being debated.42 Having the limitations of the model in mind,2 one could check this issue carefully in the context of dynamics of a macromolecule with different GB models or by comparing the charging free energies with explicit solvent model with those from different surface representations.33,43 Efforts in these directions are currently in progress.
Last, the GB model can be extended to include the inﬂuence of a membrane as PB does.22 The volume integration method is naturally suited for having a low-dielectric planar membrane in which the solvent is not accessible. Extension of the present GB model to include the inﬂuence of amembrane, and its applications, are currently in progress.
Acknowledgments
Useful discussions with Jianhan Chen, Michael Feig, and Freddie R. Salsbury, Jr., are gratefully acknowledged. We are particularly grateful to Michael Feig for preparation of a set of 611 proteins and for his efforts to develop the MMTSB toolset (http://mmtsb. scripps.edu). Financial support from the NIH (through RR12255) and the NSF funded center for Theoretical Biological Physics (CTBP) is appreciated.
References
1. Brooks, C. L., III; Karplus, M.; Pettitt, B. M. In Advances in Chemical Physics; Prigogine, I., Rice, S. A., Eds.; John Wiley & Sons: New York, 1988, vol. LXXI.
2. Roux, B.; Simonson, T. Biophys Chem 1999, 78, 1. 3. Warwicker, J.; Watson, H. C. J Mol Biol 1982, 157, 671. 4. Klapper, I.; Hagstrom, R.; Fine, R.; Sharp, K.; Honig, B. Proteins
1986, 1, 47. 5. Nicholls, A.; Honig, B. J Comput Chem 1991, 12, 435. 6. Honig, B.; Nicholls, A. Science 1995, 268, 1144. 7. Roux, B.; Berne`che, S.; Im, W. Biochemistry 2000, 39, 13295. 8. Murray, D.; Honig, B. Mol Cell 2002, 9, 145. 9. David, L.; Luo, R.; Gilson, M. J Comput Chem 2000, 21, 295. 10. Luo, R.; David, L.; Gilson, M. J Comput Chem 2002, 23, 1244. 11. Born, M. Z Phys 1920, 1, 45. 12. Still, W. C.; Tempczyk, A.; Hawley, R. C.; Hendrickson, T. J Am
Chem Soc 1990, 112, 6127.

1702

Im, Lee, and Brooks • Vol. 24, No. 14 • Journal of Computational Chemistry

13. Hawkins, G. D.; Cramer, C. J.; Truhlar, D. G. J Phys Chem 1996, 100, 19824.
14. Schaefer, M.; Karplus, M. J Phys Chem 1996, 100, 1578. 15. Qiu, D.; Shenkin, P. S.; Hollinger, F. P.; Still, W. C. J Phys Chem A
1997, 101, 3005. 16. Scarsi, M.; Apostolakis, J.; Caﬂisch, A. J Phys Chem A 1997, 101,
8098. 17. Ghosh, A.; Rapp, C. S.; Friesner, R. A. J Phys Chem B 1998, 102,
10983. 18. Dominy, B. N.; Brooks, C. L., III. J Phys Chem B 1999, 103, 3765. 19. Srinivasan, J.; Trevathan, M. W.; Beroza, P.; Case, D. A. Theor Chem
Acc 1999, 101, 426. 20. Onufriev, A.; Bashford, D.; Case, D. A. J Phys Chem B 2000, 104,
3712. 21. Lee, M. S.; Salsbury, F. R., Jr.; Brooks, C. L., III. J Chem Phys 2002,
116, 10606. 22. Spassov, V. Z.; Yan, L.; Szalma, S. J Phys Chem B 2002, 106, 8726. 23. Onufriev, A.; Bashford, D.; Case, D. A. J Comput Chem 2002, 23,
1297. 24. Lee, M. S.; Feig, M.; Salsbury, F. R., Jr.; Brooks, C. L., III. J Comput
Chem, 2003, 24, 1348. 25. Lee, B.; Richards, F. M. J Mol Biol 1971, 55, 379. 26. Richards, F. M. Annu Rev Biophys Bioeng 1977, 6, 151. 27. Gilson, M. K.; Davis, M. E.; Luty, B. A.; McCammon, J. A. J Phys
Chem 1993, 97, 3591. 28. Im, W.; Beglov, D.; Roux, B. Comput Phys Commun 1998, 111, 59. 29. Hermann, R. B. J Phys Chem 1972, 76, 2754.

30. Simonson, T.; Brunger, A. J Phys Chem 1994, 98, 4683. 31. Sharp, K. A.; Honig, B. Annu Rev Biophys Biophys Chem 1990, 19,
301. 32. Nina, M.; Im, W.; Roux, B. Biophys Chem 1999, 78, 89. 33. Nina, M.; Beglov, D.; Roux, B. J Phys Chem B 1997, 101, 5239. 34. Press, W. H.; Flannery, B. P.; Teukolsky, S. A.; Vetterling, W. T.
Numerical Recipes: The Art of Scientiﬁc Computing; Cambridge University Press: Cambridge, MA, 1989. 35. Lebedev, V. I.; Laikov, D. N. Doklady Math 1999, 59, 477. 36. Roux, B. Biophys J 1997, 73, 2980. 37. Im, W.; Berne`che, S.; Roux, B. J Chem Phys 2001, 114, 2924. 38. Brooks, B. R.; Bruccoleri, R. E.; Olafson, B. D.; States, D. J.; Swaminathan, S.; Karplus, M. J Comput Chem 1983, 4, 187. 39. MacKerell, A. D., Jr.; Bashford, D.; Bellot, M.; Dunbrack, R. L.; Evanseck, J. D.; Field, M. J.; Fischer, S.; Gao, J.; Guo, H.; S. Ha, D. J.-M.; Kuchnir, L.; Kuczera, K.; Lau, F. T. K.; Mattos, C.; Michnick, S.; Ngo, T.; Nguyen, D. T.; Prodhom, B.; Reiher, W. E., III; Roux, B.; Schlenkrich, M.; Smith, J.; Stote, R.; Straub, J.; Watanabe, M.; Wiorkiewicz–Kuczera, J.; Karplus, M. J Phys Chem B 1998, 102, 3586. 40. Berman, H. M.; Westbrook, J.; Feng, Z.; Gilliland, G.; Bhat, T. N.; Weissig, H.; Shindyalov, I. N.; Bourne, P. E. Nucleic Acids Res 2000, 28, 235. 41. Wikstrom, M.; Drakenberg, T.; Forsen, S.; Sjobring, U.; Bjorck, L. Biochemistry 1994, 33, 14011. 42. Banavali, N. K.; Im, W.; Roux, B. J Chem Phys 2002, 117, 7381. 43. Banavali, N. K.; Roux, B. J Phys Chem B 2002, 106, 11026.

